#   ████████╗███╗   ███╗██╗   ██╗██╗  ██╗    ██████╗ ██████╗ ███╗   ██╗███████╗
#   ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝   ██╔════╝██╔═══██╗████╗  ██║██╔════╝
#      ██║   ██╔████╔██║██║   ██║ ╚███╔╝    ██║     ██║   ██║██╔██╗ ██║█████╗  
#      ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗    ██║     ██║   ██║██║╚██╗██║██╔══╝  
#      ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗██╗╚██████╗╚██████╔╝██║ ╚████║██║     
#      ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝     

# General Settings {{{

#unbind-key -a

# change the default prefix
set-option -g prefix `
unbind-key C-b
bind-key Space send-prefix

# from the yank plugin
set -g @shell_mode 'vi'

setw -gq utf8 on

# binding for tpm uninstall
# use with prefix
# other options are @tpm-install and @tpm-update
set-option -g @tpm-clean C-b
set-option -g @tpm-update u

#set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q:xterm-256color:Tc'

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 500000

# tmux messages are displayed for 4 seconds
set -g display-time 1500

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

set -g default-command "${SHELL}"

# mouse mode on by-default
set -g mouse on

# vi-mode
set-window-option -g mode-keys vi

# Start windows and panes at 1, not 0

set -g base-index 1
set -g pane-base-index 1

#}}}

# Key Mappings {{{

# Reload tmux configuration
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..." \; move-window -r
bind-key -T prefix q kill-pane
bind-key -T prefix Q kill-window

# vim like fullscreen, 
bind-key -T prefix z command-prompt "find-window -Z -- '%%'"
bind-key -T prefix f resize-pane -Z

# bind a source-file ~/tmux_nord.conf \; display-message "Config reloaded..." \; move-window -r

bind ] run "tmux set-buffer \"$(xsel -o -p)\"; tmux paste-buffer"

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
# Bring back kill line under tmux prefix
bind C-k send-keys 'C-k'

# easier and faster switching between next/prev window
bind h previous-window # bind C-p previous-window
# bind l next-window # bind C-n next-window
bind l last-window # bind C-n next-window

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle


# new vi mode settings
bind-key -T copy-mode-vi / command-prompt -i -p "seek: " "send -X search-forward-incremental \"%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "seek: " "send -X search-backward-incremental \"%%\""

bind-key -T copy-mode-vi v      send -X begin-selection
bind-key -T copy-mode-vi y      send -X copy-pipe-and-cancel "xsel -i -p"
bind-key -T copy-mode-vi Enter  send -X copy-pipe-and-cancel "xsel -i -p"
bind-key -T copy-mode-vi H      send -X start-of-line
bind-key -T copy-mode-vi L      send -X end-of-line
bind-key -T copy-mode-vi K      send -X previous-paragraph
bind-key -T copy-mode-vi J      send -X next-paragraph
bind-key -T copy-mode-vi Escape send -X cancel
# new vi mode settings

#bind-key -T vi-copy y copy-pipe "xsel -i -p"

# toggle pane synchronization
bind e setw synchronize-panes


# bind-key -n C-S-Up resize-pane -U 5
# bind-key -n C-S-Down resize-pane -D 5
# bind-key -n C-S-Left resize-pane -L 10
# bind-key -n C-S-Right resize-pane -R 10

# Resize panes
bind-key -n C-Up resize-pane -U 5
bind-key -n C-Down resize-pane -D 5
bind-key -n C-Left resize-pane -L 10
bind-key -n C-Right resize-pane -R 10

bind-key C-k resize-pane -U 5
bind-key C-j resize-pane -D 5
bind-key C-h resize-pane -L 10
bind-key C-S-l resize-pane -R 10

bind C-k send-keys 'C-k'

# zoom mode
bind-key z resize-pane -Z

# Killing without confirmation.
bind-key & kill-window
bind-key x kill-pane
bind-key % kill-session

# new windows and new panes start at the same path as the parent window/pane
bind c neww -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'

# bspwm style splitting was bind -n
bind v if-shell "[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0  ]" "splitw -v -c '#{pane_current_path}'" "splitw -h -c '#{pane_current_path}' "
# swap current pane with biggest one
bind t run-shell 'zsh -c "tmux swap-pane -t \$(tmux list-panes -F \"##P 8*##{pane_width}*20*##{pane_height}\" | while read l; do t=( \$l );echo \"\${t[0]} \$((\${t[1]}))\";done | sort -k 2 -r -g | cut -d\" \" -f1 | head -n 1)"'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n "C-h" if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n "C-j" if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n "C-k" if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n "C-l" if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n "C-\\" if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Same as above but now c-j c-k work ion fzf mini panes as well ex: fzf C-r
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"
bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"

# allows c-f full page scrolling in vim
unbind C-f
bind-key -n "C-f" if-shell "$is_vim" "send-keys C-f"

unbind ,
# when renaming a window, clear the old name please
bind-key , command-prompt -p (rename-window) "rename-window '%%'"
#To emulate the default behaviour, it would look like:
#bind-key , command-prompt -I #W -p (rename-window) "rename-window '%%'"

bind-key '$' command-prompt "rename-session '%%'"

bind < swap-window -t -1\; select-window -t -1
bind > swap-window -t +1\; select-window -t +1

#}}}

# Plugin Settings {{{ 

# Double LMB Select & Copy (Word)
    bind-key -T copy-mode-vi DoubleClick1Pane \
        select-pane \; \
        send-keys -X select-word \; \
        send-keys -X copy-pipe "xsel -i -p"
        bind-key -n DoubleClick1Pane \
        select-pane \; \
        copy-mode -M \; \
        send-keys -X select-word \; \
        send-keys -X copy-pipe "xsel -i -p"

# Triple LMB Select & Copy (Line)
        bind-key -T copy-mode-vi TripleClick1Pane \
        select-pane \; \
        send-keys -X select-line \; \
        send-keys -X copy-pipe "xsel -i -p"
        bind-key -n TripleClick1Pane \
        select-pane \; \
        copy-mode -M \; \
        send-keys -X select-line \; \
        send-keys -X copy-pipe "xsel -i -p"

# Middle click to paste from the clipboard
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xsel -o -p)\"; tmux paste-buffer"

# Mouse copy paste 

bind-key -T copy-mode-vi WheelUpPane send -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -X scroll-down

# # Vi copypaste
setw -g mode-keys vi
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -i -p" \; display-message "highlighted selection copied to system clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -i -p"

# new end

# Linux has several cut-and-paste clipboards: primary, secondary, and clipboard (default in tmux-yank is clipboard).
set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
set -g @yank_with_mouse on
set -g @shell_mode 'vi'
set -g @yank_selection_mouse 'primary' # or  'clipboard' or 'secondary'

# restoring sessions for vim
set -g @resurrect-strategy-vim 'session'
set -g @extrakto_grab_area 'window full'

# }}}

# Plugins {{{
#run-shell ~/.tmux/themes/nano.onedark.theme

# Theme
# source ~/tmux_gruvbox.conf
source ~/tmux_material.conf
#source ~/tmux_iceberg.conf
# source ~/tmux_nord.conf



# Plugins
# set -g @plugin "arcticicestudio/nord-tmux"
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'dominikduda/tmux_mode_indicator'
set -g @plugin 'laktak/extrakto'

# plugins' default bindings
# resurrect
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore

# sessionist
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.  Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + S (shift + s) - switches to the last session.  The same as built-in prefix + L that everyone seems to override with some other binding.
# prefix + @ - promote current pane into a new session.  Analogous to how prefix + ! breaks current pane to a new window.
# prefix + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it.
# secondary-keys:
# h, -, ": join horizontally
# v, |, %: join vertically
# f, @: join full screen

# # set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# themes
#set -g @plugin 'odedlaz/tmux-onedark-theme'
#set -g @plugin 'egel/tmux-gruvbox'
run -b '~/.tmux/plugins/tpm/tpm'
#}}}

